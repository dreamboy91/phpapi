<?php

namespace Controller;

use Constant\CommentsType;
use Framework\Controller\AppBaseController;
use Framework\Controller\TokenAuthenticatedController;
use Helper\FileUtil;
use Symfony\Component\HttpFoundation\JsonResponse;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;

class InlineInspectionController extends AppBaseController implements TokenAuthenticatedController
{
    public function indexAction()
    {
        $sql= "SELECT
  quality_assignment_tbl.id AS id,
  CONCAT_WS(
    ' ',
    `contact_info`.`fname`,
    contact_info.`mname`,
    contact_info.`lname`
  ) AS inline_inspection_assign_to,
  bc_tbl.`ol_name` AS buyer,
  ofc_tbl.`ol_name` AS `factory`,
  if(style_tbl.`name`!='',style_tbl.`name`,'---') AS `style`,
  if(bpo_tbl.`bpo_ref_no`!='',bpo_tbl.`bpo_ref_no`,'---') AS po,
  bpo_tbl.`total_qty` AS quantity,
  style_tbl.`fabric` AS `fabric`,
  quality_assignment_tbl.`inline_inspection_due_date` AS `date`,
  bu_qam_tbl.userid AS bu_qam,
  (SELECT
  COUNT(inline_inspection_tbl.id) AS id
FROM
  `inline_inspection_tbl`
   WHERE inline_inspection_tbl.ref_id=  quality_assignment_tbl.id) AS ref_count
FROM
  quality_assignment_tbl
  LEFT JOIN `contact_info`
    ON quality_assignment_tbl.inline_inspection_assign_to = contact_info.id
  LEFT JOIN company_tbl AS ofc_tbl
    ON ofc_tbl.id = quality_assignment_tbl.select_factory
  LEFT JOIN fpo_tbl
    ON fpo_tbl.`id` = quality_assignment_tbl.`select_po`
  LEFT JOIN fpo_details
    ON fpo_tbl.id = fpo_details.group_ref
  LEFT JOIN bpo_tbl
    ON (bpo_tbl.id = fpo_details.bpo_ref)
  LEFT JOIN style_tbl
    ON style_tbl.`id` = quality_assignment_tbl.`select_style`
  INNER JOIN company_tbl AS bc_tbl
    ON (bc_tbl.id = fpo_tbl.`buyer`)
  LEFT JOIN `system_user` AS bu_qam_tbl
    ON (
      bu_qam_tbl.`contact_id` = quality_assignment_tbl.`entryby`
    )
  WHERE  quality_assignment_tbl.inline_inspection_assign_to=?
GROUP BY id";

        $inline_inspection = $this->getRepository()->getResults($sql, array($this->getUser()->contact_id));

        return new JsonResponse($inline_inspection);
    }

    public function saveAction(Request $request) {
        $data = json_decode($request->getContent(), true);

        file_put_contents('inline.txt', $request->getContent());

        $parent_tbl=array(
            'status' => 2,
            'ref_id' => "",
            'qty_cut' => 0,
            'qty_stitched' => 0,
            'qty_emb' => 0,
            'qty_finished' => 0,
            'qty_packed' => 0,
            'qty_checked' => 0,
            'latitude' => '',
            'longitude' => ''
        );

        foreach($parent_tbl as $key=>$_d){
            if(!isset($data[$key])) {
                continue;
            }

            $parent_tbl[$key] = $data[$key];
        }

        $parent_tbl['entryby'] = $this->getUser()->contact_id;

        $parent_tbl = array_filter($parent_tbl);

        $whereArray = array();
        foreach($parent_tbl as $key => $value) {
            $whereArray["$key=?"] = $value;
        }

        if($this->getRepository()->from('inline_inspection_tbl')->findBy($whereArray)->rowCount()>0) {
            return new JsonResponse(array('error'=>409), 409);
        }
        $parent_tbl['entrytime'] = date('Y-m-d H:i:s');
        $id = $this->getRepository()->from('inline_inspection_tbl')->insert($parent_tbl);

        foreach($data['fabric'] as $fabric)
        {
            $this->insertIntoInlineSubTbl($id, $fabric, CommentsType::FABRIC);
        }

        foreach($data['cutting'] as $cutting)
        {
            $this->insertIntoInlineSubTbl($id, $cutting, CommentsType::CUTTING);
        }
        foreach($data['sewing'] as $sewing)
        {
            $this->insertIntoInlineSubTbl($id, $sewing, CommentsType::SEWING);
        }

        foreach($data['labeling'] as $labeling)
        {
            $this->insertIntoInlineSubTbl($id, $labeling, CommentsType::LABELING);
        }

        foreach($data['finishing'] as $finishing)
        {
            $this->insertIntoInlineSubTbl($id, $finishing, CommentsType::FINISHING);
        }

        foreach($data['packing'] as $packing)
        {
            $this->insertIntoInlineSubTbl($id, $packing, CommentsType::PACKING);
        }

        foreach($data['styling'] as $styling)
        {
            $this->insertIntoInlineSubTbl($id, $styling, CommentsType::STYLING);
        }

        foreach($data['other'] as $other)
        {
            $this->insertIntoInlineSubTbl($id, $other, CommentsType::OTHER);
        }

        $this->uploadImage($id, $data);
        //return new JsonResponse($data);
        return new JsonResponse(array(
            'id'=>$id)
        );
    }

    /**
     * @param $id
     * @param $data
     * @return string
     * @throws \Exception
     */
    public function uploadImage($id, $data)
    {
        if(!isset($data['images']) || empty($data['images'])) {
            return;
        }

        $photos = FileUtil::uploadFileFromDataUrls(
            realpath(WEB_DIR . "/../mis/images/inline_inspection_photo/"),
            "{$id}_inline_inspection_photo_",
            $data['images']
        );

        $this->getRepository()->from('inline_inspection_tbl')->update(array(
            'photo' => implode(',', $photos)
        ), array('id=?' => $id));
    }

    /**
     * @param $id
     * @param $data
     * @param $commentsType
     * @throws \Exception
     */
    protected function insertIntoInlineSubTbl($id, $data, $commentsType)
    {
        $data['inline_ref_id'] = $id;
        $data['comments_type'] = $commentsType;
        $data['entryby'] = $this->getUser()->contact_id;
        $data['entrytime'] = date('Y-m-d H:i:s');
        $this->getRepository()->from('inline_sub_tbl')->insert($data);
    }

    public function detailsAction(Request $request)
    {
        $detailsFor= json_decode($request->getContent(), true);
        $sql= "SELECT
  inline_inspection_tbl.id,
  DATE_FORMAT(inline_inspection_tbl.entrytime,'%d-%m-%Y %h:%i %p')AS entrytime,
  quality_assignment_tbl.`daily_washing_report_due_date` AS `date`
FROM
  `inline_inspection_tbl`
  LEFT JOIN quality_assignment_tbl
    ON (
      inline_inspection_tbl.`ref_id` = quality_assignment_tbl.id
    )
WHERE inline_inspection_tbl.ref_id = ?";

        $inline_inspection_details = $this->getRepository()->getResults($sql, array($detailsFor));
        return new JsonResponse(array(
            'details_list' => $inline_inspection_details
        ));

    }

    public function eachdetailsAction($id)
    {


        $url = "http://l2nsoft.ml/mis.zxyinternational.com/mis/daily_washing.php?state=details&id=60";
        return new JsonResponse($url);



    }

}
